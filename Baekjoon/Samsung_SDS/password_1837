import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class password_1837 {
    static  boolean primeCheck[];
    static int k;
    static String P;
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        P = sc.next();
        k = sc.nextInt();
        primeCheck = new boolean[k+1];
        List<Integer> prime = new ArrayList<>();
        for(int i = 2; i<k; i++){
            if(!primeCheck[i]){
                prime.add(i);
                for(int j = i*2 ; j<k; j+=i){
                    primeCheck[j] = true;
                }
            }
        }

        for(int p : prime){
            if(p >= k) break;
            if(checkIsBad(p)){
                System.out.println("BAD "+p);
                return;
            }
        }
        System.out.println("GOOD");
    }
    static boolean checkIsBad(int x){
        int r = 0;
        for(int i = 0 ; i< P.length(); i++){
            r = (r * 10 + (P.charAt(i) - '0')) % x;
        }
        if(r==0) return true;
        else return false;
    }
    // 빅인티저 사용 예시
    public void bigint(String P){
        BigInteger pNum = new BigInteger(P);
        boolean flag = false;
        for(int i = 2; i<k; i++){
            if(!primeCheck[i]){
                BigInteger bigI = BigInteger.valueOf(i);
                if(pNum.remainder(bigI).equals(BigInteger.valueOf(0))) {
                    System.out.println("BAD "+i);
                    flag = true;
                    break;
                }
            }
        }
        if(!flag) System.out.println("GOOD");
    }

}
